version: "3.9"

services:
  db:
    image: postgres:13
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      POSTGRES_DB: ${DB_NAME:-visual_notes}
    ports:
      - "${DB_PORT_EXPOSED:-5432}"
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test:
        ["CMD-SHELL", 'pg_isready -U "$POSTGRES_USER" -d "$POSTGRES_DB" -h db']
      interval: 5s
      timeout: 5s
      retries: 10

  app:
    build:
      context: .
      target: runtime
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    environment:
      NODE_ENV: production
      # Auth config
      AUTH_TRUST_HOST: ${AUTH_TRUST_HOST:-true}
      AUTH_URL: ${AUTH_URL:-http://localhost:3000}
      VITE_AUTH_PATH: ${VITE_AUTH_PATH:-/api/auth}
      AUTH_SECRET: ${AUTH_SECRET:-dev-secret-change-me}
      # External APIs
      ESV_API_KEY: ${ESV_API_KEY:-}
      # Database pieces (compose defaults)
      DB_HOST: ${DB_HOST:-db}
      DB_PORT: ${DB_PORT:-5432}
      DB_USER: ${DB_USER:-postgres}
      DB_PASSWORD: ${DB_PASSWORD:-postgres}
      DB_NAME: ${DB_NAME:-visual_notes}
      # Constructed connection string for Prisma/Auth
      DATABASE_URL: postgresql://${DB_USER:-postgres}:${DB_PASSWORD:-postgres}@${DB_HOST:-db}:${DB_PORT:-5432}/${DB_NAME:-visual_notes}?schema=public
    ports:
      - "${APP_PORT:-3000}"

volumes:
  db-data:
